CCS PCM C Compiler, Version 5.007, 61971               03-Nis-20 18:32

               Filename:   C:\ERU\Bahar\Embedded Systems\document\CCS C Projects\test8\main.lst

               ROM used:   519 words (6%)
                           Largest free fragment is 2048
               RAM used:   29 (8%) at main() level
                           38 (10%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   11C
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   0DE
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
0031:  MOVF   3F,W
0032:  CLRF   78
0033:  SUBWF  3E,W
0034:  BTFSC  03.0
0035:  GOTO   039
0036:  MOVF   3E,W
0037:  MOVWF  77
0038:  GOTO   045
0039:  CLRF   77
003A:  MOVLW  08
003B:  MOVWF  40
003C:  RLF    3E,F
003D:  RLF    77,F
003E:  MOVF   3F,W
003F:  SUBWF  77,W
0040:  BTFSC  03.0
0041:  MOVWF  77
0042:  RLF    78,F
0043:  DECFSZ 40,F
0044:  GOTO   03C
0045:  RETURN
*
01F7:  BSF    0A.0
01F8:  BCF    0A.1
01F9:  BCF    0A.2
01FA:  ADDWF  02,F
01FB:  GOTO   18B
01FC:  GOTO   193
01FD:  GOTO   19A
01FE:  GOTO   1A1
01FF:  BCF    0A.0
0200:  BSF    0A.1
0201:  BCF    0A.2
0202:  ADDWF  02,F
0203:  GOTO   1BE
0204:  GOTO   1C8
0205:  GOTO   1D1
0206:  GOTO   1DA
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
*
0108:  MOVLW  37
0109:  MOVWF  04
010A:  BCF    03.7
010B:  MOVF   00,W
010C:  BTFSC  03.2
010D:  GOTO   11B
010E:  MOVLW  06
010F:  MOVWF  78
0110:  CLRF   77
0111:  DECFSZ 77,F
0112:  GOTO   111
0113:  DECFSZ 78,F
0114:  GOTO   110
0115:  MOVLW  7B
0116:  MOVWF  77
0117:  DECFSZ 77,F
0118:  GOTO   117
0119:  DECFSZ 00,F
011A:  GOTO   10E
011B:  RETURN
....................  
....................  
.................... int8 tick = 0; 
.................... int8 milis = 0; 
.................... int8 second = 0; 
.................... int8 minute = 0; 
.................... int8 hour = 0; 
....................  
....................  
.................... // SECOND 
.................... int8 secOnes = 0; 
.................... int8 secTens = 0; 
....................  
.................... // MINUTE 
.................... int8 minOnes = 0; 
.................... int8 minTens = 0; 
....................  
.................... // HOUR 
.................... int8 hrOnes = 0; 
.................... int8 hrTens = 0; 
....................  
.................... // Control Variables 
.................... int1 isA = 1; 
.................... int1 isB = 1; 
.................... int1 isC = 1; 
.................... int1 isD = 1; 
.................... int1 isE = 1; 
....................  
.................... // SETTINGS 
.................... int1 d4 = 0; 
.................... int1 d5 = 0; 
.................... int1 d6 = 0; 
.................... int1 d7 = 0; 
.................... int8 selection = 0; 
.................... // 
.................... int1 isPaused = 0; 
....................  
.................... void renderClock() 
.................... { 
....................    if(isA == 1 || isE == 1) 
*
0046:  BTFSC  33.0
0047:  GOTO   04A
0048:  BTFSS  33.4
0049:  GOTO   068
....................     { 
....................         isA = 0; 
004A:  BCF    33.0
....................         isE = 0; 
004B:  BCF    33.4
....................         hrOnes = hour % 10; 
004C:  MOVF   2C,W
004D:  MOVWF  3E
004E:  MOVLW  0A
004F:  MOVWF  3F
0050:  CALL   031
0051:  MOVF   77,W
0052:  MOVWF  31
....................         hrTens = (hour - hrOnes) / 10; 
0053:  MOVF   31,W
0054:  SUBWF  2C,W
0055:  MOVWF  3D
0056:  MOVWF  3E
0057:  MOVLW  0A
0058:  MOVWF  3F
0059:  CALL   031
005A:  MOVF   78,W
005B:  MOVWF  32
....................         output_a(hrOnes); 
005C:  BSF    03.5
005D:  CLRF   05
005E:  BCF    03.5
005F:  MOVF   31,W
0060:  MOVWF  05
....................         output_e(hrTens); 
0061:  BSF    03.5
0062:  BCF    09.0
0063:  BCF    09.1
0064:  BCF    09.2
0065:  BCF    03.5
0066:  MOVF   32,W
0067:  MOVWF  09
....................     } 
....................     if(isB == 1) 
0068:  BTFSS  33.1
0069:  GOTO   087
....................     { 
....................        isB = 0; 
006A:  BCF    33.1
....................        minOnes = minute % 10; 
006B:  MOVF   2B,W
006C:  MOVWF  3E
006D:  MOVLW  0A
006E:  MOVWF  3F
006F:  CALL   031
0070:  MOVF   77,W
0071:  MOVWF  2F
....................        minTens = (minute - minOnes) / 10; 
0072:  MOVF   2F,W
0073:  SUBWF  2B,W
0074:  MOVWF  3D
0075:  MOVWF  3E
0076:  MOVLW  0A
0077:  MOVWF  3F
0078:  CALL   031
0079:  MOVF   78,W
007A:  MOVWF  30
....................        output_b((minTens << 4) + minOnes); 
007B:  SWAPF  30,W
007C:  MOVWF  77
007D:  MOVLW  F0
007E:  ANDWF  77,F
007F:  MOVF   77,W
0080:  ADDWF  2F,W
0081:  MOVWF  3C
0082:  BSF    03.5
0083:  CLRF   06
0084:  BCF    03.5
0085:  MOVF   3C,W
0086:  MOVWF  06
....................     } 
....................     if(isC == 1) 
0087:  BTFSS  33.2
0088:  GOTO   0A8
....................     { 
....................       isC = 0; 
0089:  BCF    33.2
....................       secOnes = second % 10; 
008A:  MOVF   2A,W
008B:  MOVWF  3E
008C:  MOVLW  0A
008D:  MOVWF  3F
008E:  CALL   031
008F:  MOVF   77,W
0090:  MOVWF  2D
....................       secTens = (second - secOnes) / 10; 
0091:  MOVF   2D,W
0092:  SUBWF  2A,W
0093:  MOVWF  3D
0094:  MOVWF  3E
0095:  MOVLW  0A
0096:  MOVWF  3F
0097:  CALL   031
0098:  MOVF   78,W
0099:  MOVWF  2E
....................       output_c((secTens << 4) + secOnes); 
009A:  SWAPF  2E,W
009B:  MOVWF  77
009C:  MOVLW  F0
009D:  ANDWF  77,F
009E:  MOVF   77,W
009F:  ADDWF  2D,W
00A0:  MOVWF  3C
00A1:  MOVLW  00
00A2:  MOVWF  36
00A3:  BSF    03.5
00A4:  CLRF   07
00A5:  BCF    03.5
00A6:  MOVF   3C,W
00A7:  MOVWF  07
....................     } 
....................     if(isD == 1) 
00A8:  BTFSS  33.3
00A9:  GOTO   0DD
....................     { 
....................       isD = 0; 
00AA:  BCF    33.3
....................       output_bit(pin_D3, (milis >> 3) & 0x00000001); 
00AB:  RRF    29,W
00AC:  MOVWF  77
00AD:  RRF    77,F
00AE:  RRF    77,F
00AF:  MOVLW  1F
00B0:  ANDWF  77,F
00B1:  MOVF   77,W
00B2:  ANDLW  01
00B3:  BTFSS  03.2
00B4:  GOTO   0B7
00B5:  BCF    08.3
00B6:  GOTO   0B8
00B7:  BSF    08.3
00B8:  BSF    03.5
00B9:  BCF    08.3
....................       output_bit(pin_D2, (milis >> 2) & 0x00000001); 
00BA:  BCF    03.5
00BB:  RRF    29,W
00BC:  MOVWF  77
00BD:  RRF    77,F
00BE:  MOVLW  3F
00BF:  ANDWF  77,F
00C0:  MOVF   77,W
00C1:  ANDLW  01
00C2:  BTFSS  03.2
00C3:  GOTO   0C6
00C4:  BCF    08.2
00C5:  GOTO   0C7
00C6:  BSF    08.2
00C7:  BSF    03.5
00C8:  BCF    08.2
....................       output_bit(pin_D1, (milis >> 1) & 0x00000001); 
00C9:  BCF    03.0
00CA:  BCF    03.5
00CB:  RRF    29,W
00CC:  ANDLW  01
00CD:  BTFSS  03.2
00CE:  GOTO   0D1
00CF:  BCF    08.1
00D0:  GOTO   0D2
00D1:  BSF    08.1
00D2:  BSF    03.5
00D3:  BCF    08.1
....................       output_bit(pin_D0, milis & 0x00000001); 
00D4:  BCF    03.5
00D5:  BTFSC  29.0
00D6:  GOTO   0D9
00D7:  BCF    08.0
00D8:  GOTO   0DA
00D9:  BSF    08.0
00DA:  BSF    03.5
00DB:  BCF    08.0
00DC:  BCF    03.5
....................     } 
00DD:  RETURN
.................... } 
....................  
.................... #INT_TIMER1 
.................... void TIMER_isr(void) 
.................... { 
....................     if(isPaused == 0) 
00DE:  BTFSC  34.1
00DF:  GOTO   104
....................     { 
....................         tick++; 
00E0:  INCF   28,F
....................       if(tick >= 6) 
00E1:  MOVF   28,W
00E2:  SUBLW  05
00E3:  BTFSC  03.0
00E4:  GOTO   103
....................       { 
....................          tick = 0; 
00E5:  CLRF   28
....................          isD = 1; 
00E6:  BSF    33.3
....................          milis++; 
00E7:  INCF   29,F
....................          if(milis >= 10) 
00E8:  MOVF   29,W
00E9:  SUBLW  09
00EA:  BTFSC  03.0
00EB:  GOTO   103
....................          { 
....................             milis = 0; 
00EC:  CLRF   29
....................             isC = 1; 
00ED:  BSF    33.2
....................             second++; 
00EE:  INCF   2A,F
....................             if(second >= 60) 
00EF:  MOVF   2A,W
00F0:  SUBLW  3B
00F1:  BTFSC  03.0
00F2:  GOTO   103
....................             { 
....................                second = 0; 
00F3:  CLRF   2A
....................                isB = 1; 
00F4:  BSF    33.1
....................                minute++; 
00F5:  INCF   2B,F
....................                if(minute >= 60) 
00F6:  MOVF   2B,W
00F7:  SUBLW  3B
00F8:  BTFSC  03.0
00F9:  GOTO   103
....................                { 
....................                   minute = 0; 
00FA:  CLRF   2B
....................                   isA = 1; 
00FB:  BSF    33.0
....................                   hour++; 
00FC:  INCF   2C,F
....................                   if(hour >= 24) 
00FD:  MOVF   2C,W
00FE:  SUBLW  17
00FF:  BTFSC  03.0
0100:  GOTO   103
....................                   { 
....................                      hour = 0; 
0101:  CLRF   2C
....................                      isE = 1; 
0102:  BSF    33.4
....................                   } 
....................                } 
....................             } 
....................          } 
....................       } 
....................       renderClock(); 
0103:  CALL   046
....................    }    
0104:  BCF    0C.0
0105:  BCF    0A.3
0106:  BCF    0A.4
0107:  GOTO   01D
.................... } 
.................... void main() 
*
011C:  CLRF   28
011D:  CLRF   29
011E:  CLRF   2A
011F:  CLRF   2B
0120:  CLRF   2C
0121:  CLRF   2D
0122:  CLRF   2E
0123:  CLRF   2F
0124:  CLRF   30
0125:  CLRF   31
0126:  CLRF   32
0127:  BSF    33.0
0128:  BSF    33.1
0129:  BSF    33.2
012A:  BSF    33.3
012B:  BSF    33.4
012C:  BCF    33.5
012D:  BCF    33.6
012E:  BCF    33.7
012F:  BCF    34.0
0130:  CLRF   35
0131:  BCF    34.1
0132:  MOVLW  FF
0133:  MOVWF  36
0134:  BSF    03.5
0135:  BSF    1F.0
0136:  BSF    1F.1
0137:  BSF    1F.2
0138:  BCF    1F.3
0139:  MOVLW  07
013A:  MOVWF  1C
013B:  BCF    03.7
013C:  MOVLW  1F
013D:  ANDWF  03,F
.................... { 
....................    setup_timer_1(T1_INTERNAL | T1_DIV_BY_1); 
013E:  MOVLW  85
013F:  BCF    03.5
0140:  MOVWF  10
....................    set_timer1(77); 
0141:  CLRF   0E
0142:  CLRF   0F
0143:  MOVLW  4D
0144:  MOVWF  0E
....................    clear_interrupt(INT_TIMER1); 
0145:  BCF    0C.0
....................    enable_interrupts(INT_TIMER1); 
0146:  BSF    03.5
0147:  BSF    0C.0
....................    enable_interrupts(GLOBAL); 
0148:  MOVLW  C0
0149:  BCF    03.5
014A:  IORWF  0B,F
....................    set_tris_d(255); 
014B:  MOVLW  FF
014C:  BSF    03.5
014D:  MOVWF  08
....................     
....................    while(TRUE) 
....................    { 
....................       // GET ALL SETTINGS 
....................       d4 = input(pin_D4); 
014E:  BSF    08.4
014F:  BCF    03.5
0150:  BCF    33.5
0151:  BTFSC  08.4
0152:  BSF    33.5
....................       d5 = input(pin_D5); 
0153:  BSF    03.5
0154:  BSF    08.5
0155:  BCF    03.5
0156:  BCF    33.6
0157:  BTFSC  08.5
0158:  BSF    33.6
....................       d6 = input(pin_D6); 
0159:  BSF    03.5
015A:  BSF    08.6
015B:  BCF    03.5
015C:  BCF    33.7
015D:  BTFSC  08.6
015E:  BSF    33.7
....................       d7 = input(pin_D7); 
015F:  BSF    03.5
0160:  BSF    08.7
0161:  BCF    03.5
0162:  BCF    34.0
0163:  BTFSC  08.7
0164:  BSF    34.0
....................       // 
....................       if(d7) 
0165:  BTFSS  34.0
0166:  GOTO   172
....................       { 
....................          // PLAY / PAUSE 
....................          isPaused++; // 1 bit value its toggling between 1 and 0 
0167:  MOVLW  02
0168:  XORWF  34,F
....................          delay_ms(200); 
0169:  MOVLW  C8
016A:  MOVWF  37
016B:  CALL   108
....................          selection = 0; 
016C:  CLRF   35
....................          while(input(pin_D4)); 
016D:  BSF    03.5
016E:  BSF    08.4
016F:  BCF    03.5
0170:  BTFSC  08.4
0171:  GOTO   16D
....................       } 
....................        
....................       if(isPaused == 1) 
0172:  BTFSS  34.1
0173:  GOTO   1F1
....................       { 
....................          // SETUP MODE 
....................          if(d6) 
0174:  BTFSS  33.7
0175:  GOTO   183
....................          { 
....................             // Digit Selector 
....................             selection++; 
0176:  INCF   35,F
....................             if(selection > 3) 
0177:  MOVF   35,W
0178:  SUBLW  03
0179:  BTFSS  03.0
....................             { 
....................                selection = 0; 
017A:  CLRF   35
....................             } 
....................             delay_ms(200); 
017B:  MOVLW  C8
017C:  MOVWF  37
017D:  CALL   108
....................             while(input(pin_D6)); 
017E:  BSF    03.5
017F:  BSF    08.6
0180:  BCF    03.5
0181:  BTFSC  08.6
0182:  GOTO   17E
....................          } 
....................          if(d5) 
0183:  BTFSS  33.6
0184:  GOTO   1B6
....................          { 
....................             // Increase Selected Digit 
....................             switch(selection) 
0185:  MOVF   35,W
0186:  ADDLW  FC
0187:  BTFSC  03.0
0188:  GOTO   1A7
0189:  ADDLW  04
018A:  GOTO   1F7
....................             { 
....................                case 0: 
....................                { 
....................                   // HOUR 
....................                   hour++; 
018B:  INCF   2C,F
....................                   if(hour >= 24) 
018C:  MOVF   2C,W
018D:  SUBLW  17
018E:  BTFSS  03.0
....................                   { 
....................                      hour = 0; 
018F:  CLRF   2C
....................                   } 
....................                   isE = 1; 
0190:  BSF    33.4
....................                   isA = 1; 
0191:  BSF    33.0
....................                   break; 
0192:  GOTO   1A7
....................                } 
....................                case 1: 
....................                { 
....................                   // MINUTE 
....................                   minute++; 
0193:  INCF   2B,F
....................                   if(minute >= 60) 
0194:  MOVF   2B,W
0195:  SUBLW  3B
0196:  BTFSS  03.0
....................                   { 
....................                      minute = 0; 
0197:  CLRF   2B
....................                   } 
....................                   isB = 1; 
0198:  BSF    33.1
....................                   break; 
0199:  GOTO   1A7
....................                } 
....................                case 2: 
....................                { 
....................                   // SECOND 
....................                   second++; 
019A:  INCF   2A,F
....................                   if(second >= 60) 
019B:  MOVF   2A,W
019C:  SUBLW  3B
019D:  BTFSS  03.0
....................                   { 
....................                      second = 0; 
019E:  CLRF   2A
....................                   } 
....................                   isC = 1; 
019F:  BSF    33.2
....................                   break; 
01A0:  GOTO   1A7
....................                } 
....................                case 3: 
....................                { 
....................                   // MILISECOND 
....................                   milis++; 
01A1:  INCF   29,F
....................                   if(milis >= 10) 
01A2:  MOVF   29,W
01A3:  SUBLW  09
01A4:  BTFSS  03.0
....................                   { 
....................                      milis = 0; 
01A5:  CLRF   29
....................                   } 
....................                   isD = 1; 
01A6:  BSF    33.3
....................                   break; 
....................                } 
....................             } 
01A7:  CLRF   27
01A8:  BTFSC  0B.7
01A9:  BSF    27.7
01AA:  BCF    0B.7
....................             renderClock(); 
01AB:  CALL   046
01AC:  BTFSC  27.7
01AD:  BSF    0B.7
....................             delay_ms(200); 
01AE:  MOVLW  C8
01AF:  MOVWF  37
01B0:  CALL   108
....................             while(input(pin_D5)); 
01B1:  BSF    03.5
01B2:  BSF    08.5
01B3:  BCF    03.5
01B4:  BTFSC  08.5
01B5:  GOTO   1B1
....................          } 
....................          if(d4) 
01B6:  BTFSS  33.5
01B7:  GOTO   1F1
....................          { 
....................             // Reduce Selected Digit 
....................             switch(selection) 
01B8:  MOVF   35,W
01B9:  ADDLW  FC
01BA:  BTFSC  03.0
01BB:  GOTO   1E2
01BC:  ADDLW  04
01BD:  GOTO   1FF
....................             { 
....................                case 0: 
....................                { 
....................                   // HOUR 
....................                   if(hour == 0) 
01BE:  MOVF   2C,F
01BF:  BTFSS  03.2
01C0:  GOTO   1C4
....................                   { 
....................                      hour = 23; 
01C1:  MOVLW  17
01C2:  MOVWF  2C
....................                   } 
01C3:  GOTO   1C5
....................                   else 
....................                   { 
....................                      hour--; 
01C4:  DECF   2C,F
....................                   } 
....................                   isE = 1; 
01C5:  BSF    33.4
....................                   isA = 1; 
01C6:  BSF    33.0
....................                   break; 
01C7:  GOTO   1E2
....................                } 
....................                case 1: 
....................                { 
....................                   // MINUTE 
....................                   if(minute == 0) 
01C8:  MOVF   2B,F
01C9:  BTFSS  03.2
01CA:  GOTO   1CE
....................                   { 
....................                      minute = 59; 
01CB:  MOVLW  3B
01CC:  MOVWF  2B
....................                   } 
01CD:  GOTO   1CF
....................                   else 
....................                   { 
....................                      minute--; 
01CE:  DECF   2B,F
....................                   } 
....................                   isB = 1; 
01CF:  BSF    33.1
....................                   break; 
01D0:  GOTO   1E2
....................                } 
....................                case 2: 
....................                { 
....................                   // SECOND 
....................                   if(second == 0) 
01D1:  MOVF   2A,F
01D2:  BTFSS  03.2
01D3:  GOTO   1D7
....................                   { 
....................                      second = 59; 
01D4:  MOVLW  3B
01D5:  MOVWF  2A
....................                   } 
01D6:  GOTO   1D8
....................                   else 
....................                   { 
....................                      second--; 
01D7:  DECF   2A,F
....................                   } 
....................                   isC = 1; 
01D8:  BSF    33.2
....................                   break; 
01D9:  GOTO   1E2
....................                } 
....................                case 3: 
....................                { 
....................                   // MILISECOND 
....................                   if(milis == 0) 
01DA:  MOVF   29,F
01DB:  BTFSS  03.2
01DC:  GOTO   1E0
....................                   { 
....................                      milis = 9; 
01DD:  MOVLW  09
01DE:  MOVWF  29
....................                   } 
01DF:  GOTO   1E1
....................                   else 
....................                   { 
....................                      milis--; 
01E0:  DECF   29,F
....................                   } 
....................                   isD = 1; 
01E1:  BSF    33.3
....................                   break; 
....................                } 
....................             } 
01E2:  CLRF   27
01E3:  BTFSC  0B.7
01E4:  BSF    27.7
01E5:  BCF    0B.7
....................             renderClock(); 
01E6:  CALL   046
01E7:  BTFSC  27.7
01E8:  BSF    0B.7
....................             delay_ms(200); 
01E9:  MOVLW  C8
01EA:  MOVWF  37
01EB:  CALL   108
....................             while(input(pin_D4)); 
01EC:  BSF    03.5
01ED:  BSF    08.4
01EE:  BCF    03.5
01EF:  BTFSC  08.4
01F0:  GOTO   1EC
....................          } 
....................       } 
....................       delay_ms(50); 
01F1:  MOVLW  32
01F2:  MOVWF  37
01F3:  CALL   108
01F4:  BSF    03.5
01F5:  GOTO   14E
....................    } 
.................... } 
01F6:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
